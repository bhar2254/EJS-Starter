DROP TABLE IF EXISTS cache;
CREATE TABLE cache (
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    guid CHAR(36) NOT NULL DEFAULT (UUID()),
    update_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    refresh_time TIMESTAMP,
    ref TEXT NOT NULL DEFAULT (''),
    value TEXT NOT NULL DEFAULT ('')
);

DELIMITER //

CREATE TRIGGER set_default_refresh
BEFORE INSERT ON cache
FOR EACH ROW
BEGIN
    IF NEW.refresh_time IS NULL THEN
        SET NEW.refresh_time = CURRENT_TIMESTAMP + INTERVAL 6 HOUR;
    END IF;
END;
//

CREATE TRIGGER set_default_refresh_before_update
BEFORE UPDATE ON cache
FOR EACH ROW
BEGIN
    SET NEW.refresh_time = CURRENT_TIMESTAMP + INTERVAL 6 HOUR;
END;
//

DELIMITER ;

DROP TABLE IF EXISTS users;
CREATE TABLE users (
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    sid VARCHAR(255) NOT NULL UNIQUE,
    guid CHAR(36) NOT NULL DEFAULT (UUID()),
    role INT NOT NULL DEFAULT 1,
    nickname VARCHAR(255) NOT NULL DEFAULT (''),
    name VARCHAR(255) NOT NULL DEFAULT (''),
    picture VARCHAR(255) NOT NULL DEFAULT (''),
    email VARCHAR(255) NOT NULL DEFAULT (''),
    email_verified VARCHAR(6) NOT NULL DEFAULT (false),
    sub VARCHAR(255) NOT NULL DEFAULT ('') UNIQUE,
    exp INT NOT NULL DEFAULT 0,
    update_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

DROP TABLE IF EXISTS posts;
CREATE TABLE posts (
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    guid CHAR(36) NOT NULL DEFAULT (UUID()),
    author_id INT NOT NULL DEFAULT 0,
    title TEXT NOT NULL DEFAULT (''),
    subtitle TEXT NOT NULL DEFAULT (''),
    tags TEXT NOT NULL DEFAULT (''),
    content TEXT NOT NULL DEFAULT (''),
    update_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    create_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

DROP TABLE IF EXISTS meta;
CREATE TABLE meta (
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    guid CHAR(36) NOT NULL DEFAULT (UUID()),
    ref TEXT NOT NULL DEFAULT (''),
    value TEXT NOT NULL DEFAULT ('')
);